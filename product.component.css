.required-asterisk{
    color: red;
}
input.ng-invalid.ng-touched {
    border-color: red;
}
#flexSwitchCheckDefault{
    cursor: pointer;
}
a > i{
    cursor: pointer;
}
.form-check-input{
    cursor: pointer;
}
.form-check-inline{
    margin-right: 0.5rem;
}
/* .disabled-row {
    opacity: 0.5;
    pointer-events: none;
} */
  
/* .disabled-row .edit-icon,
.disabled-row .delete-icon {
    pointer-events: auto !important; 
    opacity: 1 !important; 
    cursor: pointer !important; 
    cursor: pointer; 
    position: relative; 
    z-index: 1; 
} */
 
.disabled-row td {
  color: #939393 !important;
}
.disabled-row .form-switch {
    pointer-events: none; 
    opacity: .4 !important;
}
.resend-icon:hover {cursor: pointer !important;}
.search-input::placeholder {
    color: #007bff; 
    font-weight: 500; 
    font-style: italic; 
    opacity: 1; 
}

  
  .pagination-container .ngx-pagination {
    display: flex;
    flex-direction: row;
    justify-content: space-between; 
  }
  
  /* .pagination-container pagination-controls {
    display: flex;
    justify-content: flex-end; 
  } */
  table th.sort-asc::after {
    content: 'â–²'; /* Up arrow */
    position: absolute;
    right: 8px;
    font-size: 12px;
}
.table-hover > thead > tr > * {
  background-color: #E2EDFE !important;
}
.table-hover > tbody > tr:hover > * {
  background-color: rgba(226,237,254,.1) !important;
}
td .material-symbols-outlined {
  font-size: 20px;
  /* height: 18px; */
  /* line-height: 0.6; */
}
.table > :not(caption) > * > * {padding: .4rem !important;}
.sort-indicator {
  display: inline-flex;
  gap: 1px; /* Adjust spacing between icons */
  margin-left: 5px; /* Optional: Space between text and icons */
}

.sort-indicator .active {
  font-weight: bold; /* Make the active sort icon bold */
  color: #007bff;    /* Change the color of the active icon */
}

.sort-indicator .inactive {
  color: #ccc;       /* Dim color of inactive icons */
}
.form-check-input:focus {
  outline: none; /* Prevents the default focus outline */
}
/* Default toggle styles */
/* .form-check-input {
    width: 32px;
    height: 16px;
    position: relative;
    appearance: none;
    border-radius: .5em;
    outline: none;
    cursor: pointer;
    background-color: #fff; 
    transition: background-color 0.3s, border-color 0.3s;
  } */
  
  /* Add border color based on state */
  .toggle-circle-enabled {
    border: 2px solid #28a745; /* Green border for enabled */
  }
  
  .toggle-circle-disabled {
    border: 2px solid #dc3545; /* Red border for disabled */
  }
  .toggle-circle-pending {
    border: 2px solid grey; /* Red border for disabled */
  }
  
  /* Inner circle styles */
  /* .form-check-input::after {
    content: '';
    position: absolute;
    top: 1px;
    left: 1px;
    width: 10px;
    height: 10px;
    background-color: #fff;
    border-radius: .5em;
    transition: transform 0.1s, background-color 0.1s;
  } */
  
/* Move circle for enabled state */
.toggle-circle-enabled::after {
transform: translateX(16px); /* Move circle to the right */
background-color: #28a745; /* Green circle for enabled */
}

/* Keep circle in the default position for disabled state */
.toggle-circle-disabled::after {
transform: translateX(0); /* Keep circle on the left */
background-color: #dc3545; /* Red circle for disabled */
}

.toggle-circle-pending::after {
transform: translateX(0); /* Keep circle on the left */
background-color: grey; /* Red circle for disabled */
}

/* Hiding Checkbox in ng-multiselect dropdown */
::ng-deep .dropdown-list ul li.multiselect-item-checkbox div:before {
display: none;
}
::ng-deep .dropdown-list ul li.multiselect-item-checkbox div:after {
display: none;
}
::ng-deep .dropdown-list ul li.multiselect-item-checkbox div {
padding-left: 0 !important;
}


.disabled-email {
    background-color: rgb(234, 231, 231);
    cursor: not-allowed;
    font-weight: 500;
}

.img-section {
  border: 0px solid black;
  position: relative;
}

.required {
  color: red;
}
/* 
.img-section .profile-picture img {
  min-width: 100%;
  min-height: 100%;
  max-width: 100%;
  max-height: 100%;
  object-fit: cover; 
  object-position: center; 
  display: block;
}
.upload-label {
  width: 150px;  
  height: 150px; 
  background-color: #d3d3d3; 
  border: 2px dashed #bbb; 
  border-radius: 5px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  text-align: center;
  color: #555; 
  font-size: 16px;
} */

.file-input {
  display: none; 
}
.upload-label:hover {
  background-color: #b0b0b0; 
  border-color: #999; 
}

.categories-container {
    display: grid;
    flex-direction: column;
    grid-template-columns: repeat(3, 1fr);
    align-items: center;
    justify-content: space-between;
    gap: 20px;
}

.category {
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 15px;
    background-color: #f9f9f9;
}

.category-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.action-icons {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-bottom: 10px;
}

.category-body {
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.category-body-item {
    display: flex;
    gap: 100px
}

.product-photo {
    max-width: 100%;
    height: auto;
    border-radius: 5px;
}
.custom-offcanvas-body {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 80vh; /* Ensures the content is centered vertically */
  background-color: #f8f9fa; /* Light background for contrast */
}

.offcanvas-backdrop {
  display: none !important;
}
.product-detail {
  color: #343a40; /* Dark text for readability */
  font-weight: 500;
  padding: 0.5rem;
  border-radius: 5px;
}

.text-center {
  border-bottom: 1px solid #e9ecef;
  padding-bottom: 0.5rem;
}

::ng-deep .multiselect-dropdown {
  width: 100% !important; /* Make it responsive */
  min-width: 250px; /* Adjust as needed */
}

::ng-deep .multiselect-dropdown .selected-item {
  max-width: 100%; /* Ensure the selected item does not overflow */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; /* Adds "..." when text is too long */
}
